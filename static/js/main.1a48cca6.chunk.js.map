{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE1B,OACE,sBAAKC,UAAU,oDAAf,UACI,qBAAKC,IAAI,aAAaC,IAAG,+BAA0BH,EAA1B,cACzB,gCACI,6BAAKF,IACL,4BAAIC,WCcDK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEjB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACf,OACE,cAAC,EAAD,CAEKR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHbS,SCIPC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKV,UAAY,MAAjB,SACE,uBACEA,UAAY,mCACZW,KAAM,SACNC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAAvE,SACGJ,EAAMK,YC2CEC,G,wDAzCb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAJH,E,gEAQO,IAAD,OAClBmB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAEpB,OAAQ4B,S,+BAQlC,IAAD,OACDC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC9C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAElE,OAAgC,IAA7BH,KAAKP,MAAMvB,OAAOmC,OACZ,yCAGL,sBAAKvC,UAAY,KAAjB,UACE,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAhCZO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAEhDX,M","file":"static/js/main.1a48cca6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n  \r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow'>\r\n        <img alt='robotphoto' src={`https://robohash.org/${id}?200x200`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  \r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i)=> {\r\n           return (\r\n             <Card \r\n                key ={i} \r\n                  id={robots[i].id} \r\n                  name={robots[i].name} \r\n                  email={robots[i].email}\r\n                />\r\n            );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className = 'pa2'>\r\n      <input \r\n        className = 'pa3 ba b--green bg-lightest-blue' \r\n        type ='search' \r\n        placeholder='search robots' \r\n        onChange={searchChange}\r\n         />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div style = {{overflowY: 'scroll', border: '2px solid black', height: '1000px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response =>response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n    \r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value})\r\n    \r\n  }\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n    if(this.state.robots.length === 0) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return(\r\n        <div className = 'tc'>\r\n          <h1 className = 'f1'>RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <CardList robots={filteredRobots}/>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}